buildscript {
    ext.kotlin_version = '1.3.31'
    ext.spring_boot_version = '2.1.0.RELEASE'

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.blackducksoftware.integration:common-gradle-plugin:0.0.+'
        classpath 'org.apache.commons:commons-configuration2:2.2'
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
}

version = '7.2.0-SNAPSHOT'
final String parentVersion = project.version

final String artifactoryMinimumVersion = '5.6.2'
final String blackDuckCommonVersion = '44.0.0'

apply plugin: 'com.blackducksoftware.integration.solution'

license {
    header rootProject.file('LICENSE')
}

dependencies {
    compile project("blackduck-artifactory-common")

    implementation 'org.codehaus.groovy:groovy-all:2.4.15'
    implementation 'com.blackducksoftware.integration:blackduck-common:' + blackDuckCommonVersion

    compileOnly 'org.apache.commons:commons-configuration2:2.2'
    compileOnly 'org.artifactory:artifactory-papi:' + artifactoryMinimumVersion
    testCompile 'org.artifactory:artifactory-papi:' + artifactoryMinimumVersion

    testImplementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
}

def versionFile = new File("${projectDir}/src/main/resources/version.txt")
versionFile.delete()
versionFile << version

apply from: 'generateConfig.gradle'

publishing {
    publications {
        mavenJava(MavenPublication) {
            def artifactName = "${buildDir}/distributions/${project.name}-${project.version}"
            def zipArtifactName = "${artifactName}.zip"
            def tarArtifactName = "${artifactName}.tgz"
            artifact(zipArtifactName)
            artifact(tarArtifactName)
        }
    }
}

artifactory {
    publish {
        defaults { publications('mavenJava') }
    }
}

final String folderName = "blackduck-artifactory-$version"

task createFinalZip(type: Zip) {
    dependsOn build, generateConfig

    from("${projectDir}/src/main/resources/") {
        include 'version.txt'
        into "$folderName/lib"
    }

    from("${projectDir}/build/configs/") {
        include 'blackDuckPlugin.properties'
        into "$folderName/lib"
    }

    from("${projectDir}/src/main/groovy/com/synopsys/integration/blackduck/artifactory") {
        include 'blackDuckPlugin.groovy'
        into "$folderName"
    }

    from(configurations.compile) {
        include 'blackduck-artifactory-common*.jar'
        into "$folderName/lib"
    }
}

task createFinalTar(type: Tar) {
    dependsOn build, generateConfig
    from("${projectDir}/src/main/resources/") {
        include 'version.txt'
        into "$folderName/lib"
    }

    from("${projectDir}/build/configs/") {
        include 'blackDuckPlugin.properties'
        into "$folderName/lib"
    }

    from("${projectDir}/src/main/groovy/com/synopsys/integration/blackduck/artifactory") {
        include 'blackDuckPlugin.groovy'
        into "$folderName"
    }

    from(configurations.compile) {
        include 'blackduck-artifactory-common*.jar'
        into "$folderName/lib"
    }

    compression = Compression.GZIP
}

createFinalZip.finalizedBy createFinalTar
build.finalizedBy createFinalZip

configure(subprojects) { project ->
    group = 'com.synopsys.integration'
    version = parentVersion
    dependencies {
        ext.artifactoryMinimumVersion = artifactoryMinimumVersion
        ext.blackDuckCommonVersion = blackDuckCommonVersion
    }
}

subprojects {
    tasks.withType(Test) {
        maxParallelForks = 4 // Do not allow parrallel forks otherwise the automation tests may attempt to spin up multiple Artifactory instances.
    }
}
